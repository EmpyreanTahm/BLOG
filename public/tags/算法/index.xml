<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>算法 on GeekKery</title>
    <link>https://geekkery.4everland.app/tags/%E7%AE%97%E6%B3%95/</link>
    <description>Recent content in 算法 on GeekKery</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>GeekKery</copyright>
    <lastBuildDate>Mon, 05 Apr 2021 18:13:23 +0800</lastBuildDate><atom:link href="https://geekkery.4everland.app/tags/%E7%AE%97%E6%B3%95/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>算法解析</title>
      <link>https://geekkery.4everland.app/posts/%E7%AE%97%E6%B3%95%E8%A7%A3%E6%9E%90/</link>
      <pubDate>Mon, 05 Apr 2021 18:13:23 +0800</pubDate>
      
      <guid>https://geekkery.4everland.app/posts/%E7%AE%97%E6%B3%95%E8%A7%A3%E6%9E%90/</guid>
      <description>两数之和（简单） 题目描述 给定一个整数数组 nums 和一个整数目标值 target，请你在该数组中找出和为目标值 target 的那两个整数，并返回它们的数组下标。
你可以假设每种输入只会对应一个答案。但是，数组中同一个元素在答案里不能重复出现。
你可以按任意顺序返回答案。
示例 1：
1 2 3  输入：nums = [2,7,11,15], target = 9 输出：[0,1] 解释：因为 nums[0] + nums[1] == 9 ，返回 [0, 1] 。   示例 2：
1 2  输入：nums = [3,2,4], target = 6 输出：[1,2]   示例 3：
1 2  输入：nums = [3,3], target = 6 输出：[0,1]   解答 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27  /** * @param {number[]} nums * @param {number} target * @return {number[]} */ // 双层 for 循环 const twoSum = function (nums, target) { for (let i = 0, len = nums.</description>
    </item>
    
  </channel>
</rss>
